# set working directory
setwd("~/workspace/UNIC/comp-593/r_ts_analysis/")
library(readr)
df <- read_csv("../m4_data/Hourly-train.csv")

# add loop that captures distance, names of each row and stores the best combination via dtw 

# row <- df[1,2:ncol(df)]
# # row <- df[1,2:10]
# row <- as.numeric(as.vector(remove_empty(row)))
# 
# row2 <- df[2,2:ncol(df)]
# # row2 <- df[2,2:10]
# row2 <- as.numeric(as.vector(remove_empty(row2)))
# 
# foo <- dtw(row, row2, keep=TRUE)
# 
# 
# par(mfrow=c(1,2))
# plot(p1) ; plot(p2)
# 
# p2 <- plot(foo,type="density",main="foo")
# p1 <- plot(foo,xts=row,yts=row2,type="twoway")


# prep vars
no_cols <- ncol(df)
df_dtw_cols <- c("qry_row", "tmpl_row")
df_dtw <- df_dtw_cols %>% purrr::map_dfc(setNames, object = list(integer()))
# loop to find closest series
for (qry_row in nrow(df)) {
  # empty tibble for results
  
  qry <- as.numeric(as.vector(remove_empty(df[qry_row,2:no_cols])))
  #qry_name <- as.character(df[qry_row,1])
  tmp_shortest_dist <- 0
  for (tmpl_row in nrow(df)) {
    # if rows are the same skip
    if (tmp_row == qry_row) next
    #tmp_name <- as.character(df[tmpl_row,1])
    tmp_dtw <- dtw(qry_row,tmpl_row,keep=TRUE)
    if((tmp_shortest_dist = 0) | (tmp_dtw$distance < tmp_shortest_dist))
    tmp_shortest_dist <- tmp_dtw$distance
    tmp_row <- tmpl_row
  }
  df_dtw %>% add_row(qry_row = qry_row, tmpl_row = tmp_row)
}
